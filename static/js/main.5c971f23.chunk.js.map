{"version":3,"sources":["views/initial-view/initial-view.module.css","components/object/Object.tsx","store/reducers/objects-reducer/object-actions.ts","views/initial-view/selectors/object-selector.ts","components/layer/Layer.tsx","views/initial-view/Wrapper.tsx","views/initial-view/InitialView.tsx","store/reducers/objects-reducer/objects-reducer.ts","store/reducers/root-reducer.ts","store/store.ts","App.tsx","index.tsx"],"names":["module","exports","ObjectComponent","React","memo","width","height","backgroundColor","x","y","id","onDragEnd","page","node","useRef","handleDragEnd","useCallback","evt","attrs","target","ref","draggable","dragBoundFunc","handleDragBoundFunc","fill","shadowBlur","params","pos","newY","newX","objectActions","moveAction","createAction","selectCurrentObjects","state","objects","Layer","children","otherProps","Wrapper","className","styles","wrapper","InitialView","useSelector","shallowEqual","dispatch","useDispatch","map","element","key","initialState","Array","object","index","Math","floor","random","Konva","Util","getRandomColor","objectsReducer","createReducer","handleAction","action","produce","draft","payload","rootReducer","combineReducers","store","createStore","devToolsEnhancer","trace","traceLimit","App","window","innerWidth","innerHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,QAAU,gC,gLCgBfC,EAAkBC,IAAMC,MACnC,YAA2E,IAAxEC,EAAuE,EAAvEA,MAAOC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,gBAAiBC,EAAuC,EAAvCA,EAAGC,EAAoC,EAApCA,EAAGC,EAAiC,EAAjCA,GAAIC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,KAChDC,EAAOC,iBAAO,MAEdC,EAA2BZ,IAAMa,aACrC,SAACC,GAAS,IACAC,EAAUD,EAAIE,OAAdD,MACRP,EAAU,CACRD,KACAF,EAAGU,EAAMV,EACTC,EAAGS,EAAMT,MAGb,CAACC,EAAIC,IAGP,OACE,kBAAC,OAAD,CACES,IAAKP,EACLL,EAAGA,EACHC,EAAGA,EACHY,WAAS,EACThB,MAAOA,EACPC,OAAQA,EAERgB,cAAeC,EAAoB,CAAEX,OAAMP,QAAOC,WAElDK,UAAWI,EACXS,KAAMjB,EACNkB,WAAY,OAMdF,EAAsB,SAACG,GAAuC,IAC1Dd,EAAwBc,EAAxBd,KAAMP,EAAkBqB,EAAlBrB,MAAOC,EAAWoB,EAAXpB,OACrB,OAAO,SAACqB,GACN,IAAIC,EAAOD,EAAIlB,EACXoB,EAAOF,EAAInB,EAgBf,OAdIqB,EAAO,IACTA,EAAO,GAELA,EAAOjB,EAAKP,MAAQA,IACtBwB,EAAOjB,EAAKP,MAAQA,GAGlBuB,EAAO,IACTA,EAAO,GAELA,EAAOhB,EAAKN,OAASA,IACvBsB,EAAOhB,EAAKN,OAASA,GAGhB,CACLE,EAAGqB,EACHpB,EAAGmB,K,QCrEIE,EAAgB,CAC3BC,WAHiBC,uBAAa,cAAbA,ICDNC,EAAuB,SAACC,GAAD,OAAsBA,EAAMC,S,gBCMnDC,EAAQjC,IAAMC,MAAK,gBAAGiC,EAAH,EAAGA,SAAaC,EAAhB,mCAC9B,kBAAC,QAAeA,EAAaD,M,iBCHlBE,EAAU,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OACrB,kBAAC,QAAD,CAAOG,UAAWC,IAAOC,QAASrC,MAAOO,EAAKP,MAAOC,OAAQM,EAAKN,QAChE,kBAAC8B,EAAD,KAAQC,KCCCM,EAAcxC,IAAMC,MAAK,WACpC,IAAM+B,EAAUS,YAAYX,EAAsBY,KAC5CC,EAAWC,cACXpC,EAAYK,uBAChB,SAACU,GAAD,OAAqBoB,EAAShB,EAAcC,WAAWL,MACvD,CAACoB,IAGH,OACE,kBAAC,EAAD,KACGX,EAAQa,KAAI,SAACC,GAAD,OACX,kBAAC/C,EAAD,eACEU,KAAMA,EACND,UAAWA,EACXuC,IAAKD,EAAQvC,IACTuC,W,gDCRRE,EATJ,YAAI,IAAIC,MAAM,MAAOJ,KAAI,SAACK,EAAQC,GAAT,MAAoB,CAC3C5C,GAAI4C,EACJ9C,EAAG+C,KAAKC,MAAsB,KAAhBD,KAAKE,UACnBhD,EAAG8C,KAAKC,MAAsB,KAAhBD,KAAKE,UACnBlD,gBAAiBmD,IAAMC,KAAKC,iBAC5BvD,MAAO,GACPC,OAAQ,OAcGuD,EATQC,wBAAcX,GAA2BY,aAC9DjC,EAAcC,YACd,SAACG,EAAO8B,GAAR,OACEC,YAAQ/B,GAAO,SAACgC,GAAW,IACjBxD,EAAOsD,EAAOG,QAAdzD,GACRwD,EAAMxD,GAAN,2BAAiBwD,EAAMxD,IAAQsD,EAAOG,eClB7BC,EAFK,kBAAMC,0BAAgB,CAAElC,QAAS0B,K,QCCxCS,EAAQC,sBACnBH,IACAI,2BAAiB,CAAEC,OAAO,EAAMC,WAAY,MCO/BC,MARf,WACE,OACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC3B,EAAD,Q,iBCHO/B,EAAO,CAClBP,MAAOuE,OAAOC,WACdvE,OAAQsE,OAAOE,aAGjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5c971f23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"initial-view_wrapper__2C0Ad\"};","import React, { useRef } from 'react';\nimport { Rect } from 'react-konva';\nimport type {\n  ICoordinates,\n  IObject,\n  ISize,\n  KonvaDrag,\n} from '../../types/base-types';\n\ninterface Page {\n  page: { width: number; height: number };\n}\n\ninterface Props extends IObject, Page {\n  onDragEnd: (params: IObject) => void;\n}\n\nexport const ObjectComponent = React.memo(\n  ({ width, height, backgroundColor, x, y, id, onDragEnd, page }: Props) => {\n    const node = useRef(null);\n\n    const handleDragEnd: KonvaDrag = React.useCallback(\n      (evt) => {\n        const { attrs } = evt.target;\n        onDragEnd({\n          id,\n          x: attrs.x,\n          y: attrs.y,\n        });\n      },\n      [id, onDragEnd],\n    );\n\n    return (\n      <Rect\n        ref={node}\n        x={x}\n        y={y}\n        draggable\n        width={width}\n        height={height}\n        // onDragMove={onDragStart}\n        dragBoundFunc={handleDragBoundFunc({ page, width, height })}\n        // onDragStart={onDragStart}\n        onDragEnd={handleDragEnd}\n        fill={backgroundColor}\n        shadowBlur={5}\n      />\n    );\n  },\n);\n\nconst handleDragBoundFunc = (params: Page & NonNullable<ISize>) => {\n  const { page, width, height } = params;\n  return (pos: ICoordinates) => {\n    let newY = pos.y!;\n    let newX = pos.x!;\n\n    if (newX < 0) {\n      newX = 0;\n    }\n    if (newX > page.width - width!) {\n      newX = page.width - width!;\n    }\n\n    if (newY < 0) {\n      newY = 0;\n    }\n    if (newY > page.height - height!) {\n      newY = page.height - height!;\n    }\n\n    return {\n      x: newX,\n      y: newY,\n    };\n  };\n};\n","import { createAction } from 'typesafe-actions';\nimport { IObject } from '../../../types/base-types';\n\nconst moveAction = createAction('MOVE_OBJECT')<IObject>();\n\nexport const objectActions = {\n  moveAction,\n};\n","import { RootState } from '../../../types/typesafe-actions';\n\nexport const selectCurrentObjects = (state: RootState) => state.objects;\n","import React from 'react';\nimport { Layer as KonvaLayer } from 'react-konva';\nimport { LayerConfig } from 'konva/types/Layer';\n\ninterface Props extends LayerConfig {\n  children: JSX.Element[];\n}\n\nexport const Layer = React.memo(({ children, ...otherProps }: Props) => (\n  <KonvaLayer {...otherProps}>{children}</KonvaLayer>\n));\n","import React from 'react';\nimport { Stage } from 'react-konva/lib/ReactKonvaCore';\nimport { Layer } from '../../components/layer/Layer';\nimport styles from './initial-view.module.css';\nimport { page } from '../../index';\n\nexport const Wrapper = ({ children }: { children: JSX.Element[] }) => (\n  <Stage className={styles.wrapper} width={page.width} height={page.height}>\n    <Layer>{children}</Layer>\n  </Stage>\n);\n","import React, { useCallback } from 'react';\nimport { ObjectComponent } from '../../components/object/Object';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { IObject } from '../../types/base-types';\nimport { objectActions } from '../../store/reducers/objects-reducer/object-actions';\nimport { selectCurrentObjects } from './selectors/object-selector';\nimport { Wrapper } from './Wrapper';\nimport { page } from '../../index';\n\nexport const InitialView = React.memo(() => {\n  const objects = useSelector(selectCurrentObjects, shallowEqual);\n  const dispatch = useDispatch();\n  const onDragEnd = useCallback(\n    (params: IObject) => dispatch(objectActions.moveAction(params)),\n    [dispatch],\n  );\n\n  return (\n    <Wrapper>\n      {objects.map((element) => (\n        <ObjectComponent\n          page={page}\n          onDragEnd={onDragEnd}\n          key={element.id}\n          {...element}\n        />\n      ))}\n    </Wrapper>\n  );\n});\n\n// const mapDispatchToProps = (dispatch: Dispatch) => ({});\n\n// export default connect(mapStateToProps, mapDispatchToProps)(InitialView);\n","import { createReducer } from 'typesafe-actions';\nimport { objectActions } from './object-actions';\nimport { IObject } from '../../../types/base-types';\nimport Konva from 'konva';\nimport produce from 'immer';\n\nconst generateInitialState = () =>\n  [...new Array(4000)].map((object, index) => ({\n    id: index,\n    x: Math.floor(Math.random() * 1920),\n    y: Math.floor(Math.random() * 1080),\n    backgroundColor: Konva.Util.getRandomColor(),\n    width: 50,\n    height: 50,\n  }));\n\nconst initialState: IObject[] = generateInitialState();\n\nconst objectsReducer = createReducer(initialState as IObject[]).handleAction(\n  objectActions.moveAction,\n  (state, action) =>\n    produce(state, (draft) => {\n      const { id } = action.payload;\n      draft[id] = { ...draft[id], ...action.payload };\n    }),\n);\n\nexport default objectsReducer;\nexport type objectsReducerState = ReturnType<typeof objectsReducer>;\n","import { combineReducers } from 'redux';\nimport objectsReducer from './objects-reducer/objects-reducer';\n\nconst rootReducer = () => combineReducers({ objects: objectsReducer });\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/root-reducer';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nexport const store = createStore(\n  rootReducer(),\n  devToolsEnhancer({ trace: true, traceLimit: 25 }),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { InitialView } from './views/initial-view/InitialView';\nimport { store } from './store/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <InitialView />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport ReactDOM from 'react-dom';\n\nexport const page = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}